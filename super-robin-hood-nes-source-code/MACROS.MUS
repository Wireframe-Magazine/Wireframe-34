	if musicon=1
********************************************************
*MACROS FOR THE NINTENDO 8-BIT CONSOLE		      *
*                                                      *
*(C) 1991 G.RAEBURN                                    *
*                                                      *
*6502 ASSEMBLY SOURCE                                  *
********************************************************

;$4010	SAMPLE STATUS
;128	1=ENABLE IRQ AFTER SAMPLE
;64	1=REPLAY SAMPLE
;32-1	SAMPLE SPEED
;(8-1)	MUSICAL SCALE (WHITE KEYS)
;(32-8)	DIFF SPEEDS (NOT SCALE)

;$4011	D TO A CONVERTER
;$4012	SAMPLE START - X*64+$C000
;$4013	SAMPLE END - (X+1)*16
;$4014	LOADS VDP WITH SPRITE SET
;$4015	BITS 0-3 ENABLE SOUND. BIT 4 = ENABLE SAMPLES
;$4016	KEYPADS+?
;$4017	KEYPADS+?

	OPTION 0,0

NEXUS_RAM	MACRO
	LDA #$8B
	STA $C003
	ENDM

NEXUS_ROM	MACRO
	LDA #$4B
	STA $C003
	ENDM

DV	MACRO
	DS @1

	IF *>$7F5;C
	ERROR "OUT OF RAM...
	ENDIF

	ENDM

SOAPY_BITS	MACRO
	JSR TESTPDS
	;NOP
	;NOP
	;NOP
	ENDM

DELAY	MACRO
	LDX #@1
	LDY #0
!1	DEY
	BNE !1
	DEX
	BNE !1
	ENDM

ACCESS_ON	MACRO
	LDA #$8B
	STA $C003
	ENDM

ACCESS_OFF	MACRO
	LDA #$4B
	STA $C003
	ENDM

BWON	MACRO
	LDA STATUS1
	ORA #1
	STA _STATUS1
	ENDM

BWOFF	MACRO
	LDA STATUS1
	STA _STATUS1
	ENDM

VECT	MACRO
	DB <@1,>@1
	ENDM

;
;LOAD FILENAME,VRAM ADDRESS,BANK NO.
;
GFX	MACRO
	LDA #0
	JSR NEW_UNPACK

	DW @1
	DW @2
	DB @3
	ENDM

;
;LOAD FILENAME,VRAM ADDRESS,BANK NO.
;
GFX_VBL	MACRO
	INC DOWN_LOADING
	LDA #128
	JSR NEW_UNPACK

	DW @1
	DW @2
	DB @3
	ENDM

;
;LOAD FILENAME,VRAM ADDRESS,BANK NO.
;
UNPACK	MACRO
	JSR UNPACK_SCREEN

	DW @1
	DW @2
	DB @3
	ENDM



LOW	MACRO
	LDA #<@1
	ENDM

HIGH	MACRO
	LDA #>@1
	ENDM

LOWX	MACRO
	LDX #<@1
	ENDM

HIGHX	MACRO
	LDX #>@1
	ENDM

LOWY	MACRO
	LDY #<@1
	ENDM

HIGHY	MACRO
	LDY #>@1
	ENDM

VRAM	MACRO
	HIGH @1
	STA $2006
	LOW @1
	STA $2006
	ENDM

PIC	MACRO
	INCBIN C:\gav\NIN4\GFX4\@1.OBJ
	;INCBIN C:\GAV/NIN\GFX\@1.OBJ
	ENDM

UDG	MACRO
	INCBIN C:\GAV\NIN4\GFX4\@1.CHR
	;INCBIN C:\GAV/NIN\GFX\@1.CHR
	ENDM

GRAPHIC	MACRO
	INCBIN C:\gav\NIN2\GFX\@1.OBJ
		;INCBIN C:\GAV/NIN\GFX\@1.OBJ
	ENDM

CHAR	MACRO
	INCBIN C:\GAV\NIN2\GFX\@1.CHR
		;INCBIN C:\GAV/NIN\GFX\@1.CHR
	ENDM

GRAFIX	MACRO
	INCBIN C:\GAV\NIN3\GFX\@1.OBJ
	ENDM

CHARS	MACRO
	INCBIN C:\GAV\NIN3\GFX\@1.CHR
	ENDM

LOAD	MACRO
	LOW @2
	STA @1
	HIGH @2
	STA @1+1
	ENDM

FADE	MACRO
	JSR SETFADE

	LOW @1
	STA $17E
	HIGH @1
	STA $17F
	ENDM

FADE2	MACRO
	JSR SETFADE2
	ENDM
;
;WRITE TO SCREEN(0 OR 1),X,Y,CHARACTER
;
WRITE	MACRO
	IF @1
	HIGH $2400+(@3*32)+@2
	STA $2006
	LOW $2400+(@3*32)+@2
	STA $2006
	LDA #@4
	STA $2007
	EXITM
	ENDIF

	HIGH $2000+(@3*32)+@2
	STA $2006
	LOW $2000+(@3*32)+@2
	STA $2006
	LDA #@4
	STA $2007
	ENDM



SETBANK	MACRO
	IFS [@1] [X]

	TXA
	STA BANKBITS,X

	EXITM
	ENDIF


	IFS [@1] [A]

	TAX
	STA BANKBITS,X

	ELSE

	LDA #@1
	STA BANKBITS+@1

	ENDIF
	ENDM



INN	MACRO
	INC @1
	BNE !1
	INC @1+1
!1
	ENDM

G	MACRO
	DW @1
	DW @2
	DB @3
	ENDM

gav_ADD	MACRO
	LDA @2
	CLC
	ADC @1
	STA @2
	BCC !1
	INC @2+1
!1
	ENDM

gav_SUB	MACRO
	LDA @2
	SEC
	SBC @1
	STA @2
	BCS !1
	DEC @2+1
!1
	ENDM

MOVE	MACRO
	LOW @2
	STA @1
	HIGH @2
	STA @1+1
	ENDM

CLOCKS	MACRO
CLN = @1 [2,350]
	IF CLN>8
	REPEAT (CLN-2)/7
	HEX 4868
	;=PHAPLA
CLN = CLN-(CLN-2)/7*7
	ENDIF

	IF CLN=7
	PHA
	PLA

	ELSE

	IF CLN>4
	BIT 0
CLN = CLN-3
	ENDIF
	IF CLN&1
	BIT 0
	ELSE
	NOP
	ENDIF
	IF CLN>3
	NOP
	ENDIF

	ENDIF

	ENDM


TICKS	MACRO
	JSR TICKS@@1
	ENDM


TIMEY	MACRO	;CORRUPTS X & Y
CLN = @1
	IFS [@2] []
	ELSE
CLN = CLN+(@2)*113+(@2)*66/100
	ENDIF
CLN2 = 0
	IF (CLN=30)!(CLN>31)
CLN = CLN-30
	IF CLN-CLN/5*5=1
CLN2 = 2
CLN = CLN-2
	ENDIF
	LDX #<(CLN/5)+1
	LDY #>(CLN/5)+256
	JSR BIGTIMECODE
CLN = CLN-CLN/5*5
	ENDIF

CLN = CLN+CLN2
	IF (CLN=12)!(CLN>13)
	TICKS CLN
	ELSE
	IF CLN
	CLOCKS CLN
	ENDIF
	ENDIF

	ENDM

	endif
